Arduino

1. UART는 시리얼 통신을 가능하게 해주는 장치이자 기술
2. Serial.begin(9600); <- 9600은 **시리얼 통신의 전송 속도 (baud rate)**를 의미. 역사적으로 널리 쓰인 표준 속도
3. Serial.print()는 줄바꿈 X, Serial.println()은 줄 끝에 \n을 추가(줄바꿈 O)
4. setup과 loop 함수가 실제로 사용되는 과정
ex) #include <Arduino.h>
    
    int main(void)                                  <- Arduino에서는 이 main() 함수가 일반적으로 숨겨져 있지만, 내부적으로는 이 구조를 기반으로 실행됨
    {
        init();                                     <- 보드 및 내부 주변장치 초기화 함수(타이머 설정, 핀 기본 설정, 아날로그/디지털 기능 초기화)
    #if defined(USBCON)                             ┐ 
        USBDevice.attach();                         │                      
    #endif                                          ┘ <- USB 디바이스 기능을 활성화. 대부분의 ESP8266이나 Uno에서는 해당되지 않으며 이 코드는 무시
        setup();                                    <- 사용자가 작성한 setup() 함수 호출

        for( ; ; ){                                 <- 조건 없는 무한 루프 (while(true)와 동일)
            loop();                                 <- 사용자가 작성한 loop() 함수를 반복적으로 호출
            if (serialEventRun) serialEventRun();   <- serialEventRun()은 사용자가 정의한 serialEvent() 함수들을 자동으로 실행해주는 비동기 이벤트 처리 함수. 보통은 잘 사용되지 않지만, 시리얼 통신 이벤트를 자동으로 처리하고 싶을 때 유용
        }

        return 0;                                   <- for(;;) 무한 루프 구조이므로 이 줄까지 도달하지 않음
    }
5. VCC : +(5 / 3.3v) / DATA : out(D4) / GND : -(G)
6. TCP는 1:1 연결. 클라이언트를 여러개 쓸 때 쓰레드 사용해야 해서 복잡
7. UDP는 1:다수 연결




MySQL

root 권한은 리눅스 시스템이나 MySQL과 같은 데이터베이스에서 모든 작업을 수행할 수 있는 최고 수준의 관리자 권한

현재 호스트 OS(예: Windows)에서 직접 실행 중인 MySQL 서버에 접속하는 경우 → 로컬(local)
VMware 내에서 돌아가는 Linux가 별도 IP (예: 192.168.x.x)를 가지고 있고, 그 안에서 MySQL이 구동되는 경우 → 원격(remote)

MySQL에 연결된 상태에서 존재하는 데이터베이스 목록과 각 데이터베이스 내부의 테이블 정보를 조회하는 방법
1. sudo mysql    <- 입력

2. CREATE USER 'root'@'%' IDENTIFIED BY '원하는 비밀번호';
   GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;
   FLUSH PRIVILEGES;    <- 한 줄씩 입력. 모든 IP에 대해 허용

3. sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf     <- 입력

4. bind-address = 0.0.0.0   <- 찾아서 수정. 모든 네트워크 인터페이스(IP)에서의 접속을 허용

5. sudo systemctl restart mysql     <- 입력. 서버 재시작

6. sudo netstat -tnlp | grep 3306   <- 입력. 정상 동작(포트 3306이 외부에 열렸는지) 확인

7. sudo mysql   <- 입력

8. SELECT host, user FROM mysql.user WHERE user = 'root';   <- 입력. 현재 root 계정 권한 확인

9. +-----------+------+
   | host      | user |
   +-----------+------+
   | %         | root |     <- 원격 접속 허용
   | localhost | root |     <- 로컬 전용 
   +-----------+------+
   2 rows in set (0.00 sec)

10. sudo mysql  <- 입력. mysql -u root -p 입력 후 ERROR 1698 (28000): Access denied for user 'root'@'localhost' 에러 문구 출력 시

11. ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '원하는 비밀번호';
    FLUSH PRIVILEGES;   <- 한 줄씩 입력. 소켓 인증에서 비밀번호 인증으로 전환. 로컬에서의 root 사용 용도

12. mysql -u root -p -h 192.168.x.xx    <- 1~6번까지 진행 후 입력. 원격 사용 용도






. SHOW DATABASES;







